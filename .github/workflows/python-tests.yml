#file: noinspection UndefinedParamsPresent
# .github/workflows/python-tests.yml

name: Run Python Tests

# Controls when the workflow will run
on:
  push: # Trigger on pushes to any branch
    branches: [ "**" ] # Runs on pushes to main, features, etc.
  pull_request: # Also trigger on pull requests targeting main
    branches: [ "main" ] # Adjust if your main branch has a different name (e.g., master)

jobs:
  # Define a job named 'test'
  test:
    # Specify the type of runner that the job will run on
    runs-on: ubuntu-latest

    # Use a matrix strategy to test across multiple Python versions
    strategy:
      fail-fast: false # Don't cancel all jobs if one Python version fails
      matrix:
        python-version: ["3.11", "3.12"] # Test on Python 3.11 (your current) and 3.12

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Set up the specified Python version from the matrix
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # Enable caching for Poetry dependencies based on poetry.lock
          cache: 'poetry'

      # Step 3: Install Poetry
      # Uses a dedicated action for robust Poetry installation
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          # Recommended flags for CI environments
          virtualenvs-create: true
          virtualenvs-in-project: true # Keeps venv inside project dir, often easier
          installer-parallel: true   # Speeds up poetry install

      # Step 4: Install project dependencies using Poetry
      # --no-interaction: Prevents asking questions
      # --sync: Ensures environment exactly matches lock file (removes unused packages)
      - name: Install dependencies
        run: poetry install --no-interaction --sync

      # Step 5: Run tests using pytest managed by Poetry
      # -v: Verbose output
      - name: Run tests
        run: poetry run pytest -v